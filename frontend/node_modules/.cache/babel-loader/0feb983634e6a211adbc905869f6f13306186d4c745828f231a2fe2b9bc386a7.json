{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mahit\\\\Documents\\\\soc-chatbot\\\\frontend\\\\src\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatBot.css\"; // Make sure you're importing the updated CSS\n\n// Accept user and logout function as props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot({\n  getToken,\n  user,\n  logout\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hello! I am your SOC Assistant. Ask me about IPs, malware, CVEs, etc.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:8000\";\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    const currentInput = input;\n    setInput(\"\");\n    try {\n      const token = await getToken();\n      if (!token) throw new Error(\"JWT token not found\");\n      const response = await fetch(`${BACKEND_URL}/analyze`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-token\": token\n        },\n        body: JSON.stringify({\n          query: currentInput\n        })\n      });\n      if (!response.ok) throw new Error(`Backend error: ${response.status}`);\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: data.result\n      }]);\n    } catch (err) {\n      console.error(\"Error calling backend:\", err);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Sorry, I couldn't connect to the backend.\"\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"user-info\",\n        children: [\"Logged in as \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => logout({\n          logoutParams: {\n            returnTo: window.location.origin\n          }\n        }),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content-wrapper\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bubble\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Type your query...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"EfXMMDDB8BfWsmbXS7JDTqTXtno=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatBot","getToken","user","logout","_s","messages","setMessages","sender","text","input","setInput","messagesEndRef","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","newMessages","currentInput","token","Error","response","fetch","method","headers","body","JSON","stringify","query","ok","status","data","json","prev","result","err","console","error","handleKeyPress","e","key","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","logoutParams","returnTo","window","location","origin","map","msg","idx","ref","type","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Mahit/Documents/soc-chatbot/frontend/src/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./ChatBot.css\"; // Make sure you're importing the updated CSS\r\n\r\n// Accept user and logout function as props\r\nfunction ChatBot({ getToken, user, logout }) {\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"Hello! I am your SOC Assistant. Ask me about IPs, malware, CVEs, etc.\" }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:8000\";\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessages = [...messages, { sender: \"user\", text: input }];\r\n    setMessages(newMessages);\r\n    const currentInput = input;\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const token = await getToken();\r\n      if (!token) throw new Error(\"JWT token not found\");\r\n\r\n      const response = await fetch(`${BACKEND_URL}/analyze`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-token\": token\r\n        },\r\n        body: JSON.stringify({ query: currentInput })\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Backend error: ${response.status}`);\r\n\r\n      const data = await response.json();\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: data.result }]);\r\n    } catch (err) {\r\n      console.error(\"Error calling backend:\", err);\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: \"Sorry, I couldn't connect to the backend.\" }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = e => {\r\n    if (e.key === \"Enter\") handleSend();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">\r\n        <span className=\"user-info\">Logged in as {user.name}</span>\r\n        <button onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"messages-list\">\r\n        <div className=\"chat-content-wrapper\">\r\n          {messages.map((msg, idx) => (\r\n            <div key={idx} className={`message ${msg.sender}`}>\r\n              <div className=\"bubble\">{msg.text}</div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"input-area-wrapper\">\r\n        <div className=\"chat-content-wrapper\">\r\n          <div className=\"input-area\">\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={e => setInput(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Type your query...\"\r\n            />\r\n            <button onClick={handleSend}>âž¤</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}