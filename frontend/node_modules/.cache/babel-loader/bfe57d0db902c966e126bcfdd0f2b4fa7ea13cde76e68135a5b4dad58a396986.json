{"ast":null,"code":"const handleSend = async () => {\n  if (!input) return;\n  setMessages(prev => [...prev, {\n    sender: \"user\",\n    text: input\n  }]);\n  try {\n    const token = await getToken(); // from props\n    const response = await fetch(\"http://127.0.0.1:8000/analyze\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-token\": token\n      },\n      body: JSON.stringify({\n        query: input\n      })\n    });\n    const data = await response.json();\n    setMessages(prev => [...prev, {\n      sender: \"bot\",\n      text: data.result\n    }]);\n  } catch (err) {\n    console.error(\"Error calling backend:\", err);\n    setMessages(prev => [...prev, {\n      sender: \"bot\",\n      text: \"Error connecting to backend\"\n    }]);\n  }\n  setInput(\"\");\n};","map":{"version":3,"names":["handleSend","input","setMessages","prev","sender","text","token","getToken","response","fetch","method","headers","body","JSON","stringify","query","data","json","result","err","console","error","setInput"],"sources":["C:/Users/Mahit/Documents/soc-chatbot/frontend/src/ChatBot.js"],"sourcesContent":["const handleSend = async () => {\r\n  if (!input) return;\r\n  setMessages((prev) => [...prev, { sender: \"user\", text: input }]);\r\n\r\n  try {\r\n    const token = await getToken(); // from props\r\n    const response = await fetch(\"http://127.0.0.1:8000/analyze\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-token\": token\r\n      },\r\n      body: JSON.stringify({ query: input })\r\n    });\r\n\r\n    const data = await response.json();\r\n    setMessages((prev) => [...prev, { sender: \"bot\", text: data.result }]);\r\n  } catch (err) {\r\n    console.error(\"Error calling backend:\", err);\r\n    setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error connecting to backend\" }]);\r\n  }\r\n\r\n  setInput(\"\");\r\n};\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI,CAACC,KAAK,EAAE;EACZC,WAAW,CAAEC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAEJ;EAAM,CAAC,CAAC,CAAC;EAEjE,IAAI;IACF,MAAMK,KAAK,GAAG,MAAMC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,SAAS,EAAEL;MACb,CAAC;MACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAEd;MAAM,CAAC;IACvC,CAAC,CAAC;IAEF,MAAMe,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClCf,WAAW,CAAEC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAEW,IAAI,CAACE;IAAO,CAAC,CAAC,CAAC;EACxE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC5CjB,WAAW,CAAEC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAE;IAA8B,CAAC,CAAC,CAAC;EAC1F;EAEAiB,QAAQ,CAAC,EAAE,CAAC;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}