{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mahit\\\\Documents\\\\soc-chatbot\\\\frontend\\\\src\\\\ChatBot.js\",\n  _s = $RefreshSig$();\n// ChatBot.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatBot.css\"; // Import the new CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot({\n  getToken\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hello! I am your SOC Assistant. Ask me about IPs, malware, CVEs, etc.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null); // Ref to scroll to the bottom\n\n  const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:8000\";\n\n  // Function to automatically scroll to the latest message\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  // useEffect hook to scroll down when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    setInput(\"\"); // Clear input immediately\n\n    try {\n      const token = await getToken();\n      if (!token) throw new Error(\"JWT token not found\");\n      const response = await fetch(`${BACKEND_URL}/analyze`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-token\": token\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n      if (!response.ok) throw new Error(`Backend error: ${response.status}`);\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: data.result\n      }]);\n    } catch (err) {\n      console.error(\"Error calling backend:\", err);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Sorry, I couldn't connect to the backend.\"\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: \"SOC Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-list\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bubble\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your query...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"EfXMMDDB8BfWsmbXS7JDTqTXtno=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatBot","getToken","_s","messages","setMessages","sender","text","input","setInput","messagesEndRef","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","newMessages","token","Error","response","fetch","method","headers","body","JSON","stringify","query","ok","status","data","json","prev","result","err","console","error","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","ref","type","value","onChange","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mahit/Documents/soc-chatbot/frontend/src/ChatBot.js"],"sourcesContent":["// ChatBot.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./ChatBot.css\"; // Import the new CSS file\r\n\r\nfunction ChatBot({ getToken }) {\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"Hello! I am your SOC Assistant. Ask me about IPs, malware, CVEs, etc.\" }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null); // Ref to scroll to the bottom\r\n\r\n  const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:8000\";\r\n\r\n  // Function to automatically scroll to the latest message\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  // useEffect hook to scroll down when messages change\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessages = [...messages, { sender: \"user\", text: input }];\r\n    setMessages(newMessages);\r\n    setInput(\"\"); // Clear input immediately\r\n\r\n    try {\r\n      const token = await getToken();\r\n      if (!token) throw new Error(\"JWT token not found\");\r\n\r\n      const response = await fetch(`${BACKEND_URL}/analyze`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-token\": token\r\n        },\r\n        body: JSON.stringify({ query: input })\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Backend error: ${response.status}`);\r\n\r\n      const data = await response.json();\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: data.result }]);\r\n    } catch (err) {\r\n      console.error(\"Error calling backend:\", err);\r\n      setMessages(prev => [...prev, { sender: \"bot\", text: \"Sorry, I couldn't connect to the backend.\" }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = e => {\r\n    if (e.key === \"Enter\") handleSend();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">\r\n        SOC Assistant\r\n      </div>\r\n\r\n      <div className=\"messages-list\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`message ${msg.sender}`}>\r\n            <span className=\"bubble\">\r\n              {msg.text}\r\n            </span>\r\n          </div>\r\n        ))}\r\n        {/* Empty div to which we can scroll */}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Type your query...\"\r\n        />\r\n        <button onClick={handleSend}>âž¤</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}