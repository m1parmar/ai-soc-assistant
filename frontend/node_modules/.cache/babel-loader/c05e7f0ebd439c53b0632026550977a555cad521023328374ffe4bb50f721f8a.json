{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mahit\\\\Documents\\\\soc-chatbot\\\\frontend\\\\src\\\\ChatBot.js\",\n  _s = $RefreshSig$();\n// ChatBot.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"Backend URL:\", process.env.REACT_APP_BACKEND_URL);\nfunction ChatBot({\n  getToken\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hello! I am your SOC Assistant. Ask me about IPs, malware, CVEs, etc.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n\n  // Backend URL from .env.frontend\n  const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:8000\";\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: input\n    }]);\n    try {\n      // Get Auth0 JWT token\n      const token = await getToken();\n      if (!token) throw new Error(\"JWT token not found\");\n\n      // Call backend API\n      const response = await fetch(`${BACKEND_URL}/analyze`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-token\": token\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Backend error: ${response.status}`);\n      }\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: data.result\n      }]);\n    } catch (err) {\n      console.error(\"Error calling backend:\", err);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Error connecting to backend\"\n      }]);\n    }\n    setInput(\"\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"15px\",\n      maxWidth: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\",\n        overflowY: \"auto\",\n        marginBottom: \"10px\"\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"5px 0\",\n          textAlign: msg.sender === \"user\" ? \"right\" : \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: \"inline-block\",\n            padding: \"8px 12px\",\n            borderRadius: \"12px\",\n            backgroundColor: msg.sender === \"user\" ? \"#DCF8C6\" : \"#F1F0F0\"\n          },\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type your query...\",\n      style: {\n        width: \"80%\",\n        padding: \"8px\",\n        fontSize: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      style: {\n        padding: \"8px 16px\",\n        marginLeft: \"10px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"U5PJPk9PnjrYXj6yP8nvcucDDKg=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","console","log","process","env","REACT_APP_BACKEND_URL","ChatBot","getToken","_s","messages","setMessages","sender","text","input","setInput","BACKEND_URL","handleSend","trim","prev","token","Error","response","fetch","method","headers","body","JSON","stringify","query","ok","status","data","json","result","err","error","handleKeyPress","e","key","style","border","padding","maxWidth","children","height","overflowY","marginBottom","map","msg","idx","margin","textAlign","display","borderRadius","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","placeholder","width","fontSize","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Mahit/Documents/soc-chatbot/frontend/src/ChatBot.js"],"sourcesContent":["// ChatBot.js\r\nimport React, { useState } from \"react\";\r\nconsole.log(\"Backend URL:\", process.env.REACT_APP_BACKEND_URL);\r\n\r\nfunction ChatBot({ getToken }) {\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"Hello! I am your SOC Assistant. Ask me about IPs, malware, CVEs, etc.\" }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // Backend URL from .env.frontend\r\n  const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:8000\";\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: input }]);\r\n\r\n    try {\r\n      // Get Auth0 JWT token\r\n      const token = await getToken();\r\n\r\n      if (!token) throw new Error(\"JWT token not found\");\r\n\r\n      // Call backend API\r\n      const response = await fetch(`${BACKEND_URL}/analyze`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-token\": token\r\n        },\r\n        body: JSON.stringify({ query: input })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Backend error: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: data.result }]);\r\n    } catch (err) {\r\n      console.error(\"Error calling backend:\", err);\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error connecting to backend\" }]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") handleSend();\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"1px solid #ccc\", padding: \"15px\", maxWidth: \"600px\" }}>\r\n      <div style={{ height: \"300px\", overflowY: \"auto\", marginBottom: \"10px\" }}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} style={{ margin: \"5px 0\", textAlign: msg.sender === \"user\" ? \"right\" : \"left\" }}>\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                padding: \"8px 12px\",\r\n                borderRadius: \"12px\",\r\n                backgroundColor: msg.sender === \"user\" ? \"#DCF8C6\" : \"#F1F0F0\"\r\n              }}\r\n            >\r\n              {msg.text}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"Type your query...\"\r\n        style={{ width: \"80%\", padding: \"8px\", fontSize: \"16px\" }}\r\n      />\r\n      <button onClick={handleSend} style={{ padding: \"8px 16px\", marginLeft: \"10px\" }}>\r\n        Send\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,OAAO,CAACC,GAAG,CAACC,qBAAqB,CAAC;AAE9D,SAASC,OAAOA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CACvC;IAAEa,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAwE,CAAC,CACjG,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMiB,WAAW,GAAGZ,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;EAEhF,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC,CAAC,EAAE;IAEnBP,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEP,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAM,CAAC,CAAC,CAAC;IAEjE,IAAI;MACF;MACA,MAAMM,KAAK,GAAG,MAAMZ,QAAQ,CAAC,CAAC;MAE9B,IAAI,CAACY,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;;MAElD;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,WAAW,UAAU,EAAE;QACrDQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,SAAS,EAAEL;QACb,CAAC;QACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEf;QAAM,CAAC;MACvC,CAAC,CAAC;MAEF,IAAI,CAACQ,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIT,KAAK,CAAC,kBAAkBC,QAAQ,CAACS,MAAM,EAAE,CAAC;MACtD;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCtB,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEP,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEmB,IAAI,CAACE;MAAO,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZjC,OAAO,CAACkC,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;MAC5CxB,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEP,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAA8B,CAAC,CAAC,CAAC;IAC1F;IAEAE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMsB,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAEtB,UAAU,CAAC,CAAC;EACrC,CAAC;EAED,oBACEhB,OAAA;IAAKuC,KAAK,EAAE;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC3E3C,OAAA;MAAKuC,KAAK,EAAE;QAAEK,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,EACtElC,QAAQ,CAACsC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBjD,OAAA;QAAeuC,KAAK,EAAE;UAAEW,MAAM,EAAE,OAAO;UAAEC,SAAS,EAAEH,GAAG,CAACrC,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG;QAAO,CAAE;QAAAgC,QAAA,eAC7F3C,OAAA;UACEuC,KAAK,EAAE;YACLa,OAAO,EAAE,cAAc;YACvBX,OAAO,EAAE,UAAU;YACnBY,YAAY,EAAE,MAAM;YACpBC,eAAe,EAAEN,GAAG,CAACrC,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG;UACvD,CAAE;UAAAgC,QAAA,EAEDK,GAAG,CAACpC;QAAI;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GAVCT,GAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN1D,OAAA;MACE2D,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE/C,KAAM;MACbgD,QAAQ,EAAGxB,CAAC,IAAKvB,QAAQ,CAACuB,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;MAC1CG,UAAU,EAAE3B,cAAe;MAC3B4B,WAAW,EAAC,oBAAoB;MAChCzB,KAAK,EAAE;QAAE0B,KAAK,EAAE,KAAK;QAAExB,OAAO,EAAE,KAAK;QAAEyB,QAAQ,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACF1D,OAAA;MAAQmE,OAAO,EAAEnD,UAAW;MAACuB,KAAK,EAAE;QAAEE,OAAO,EAAE,UAAU;QAAE2B,UAAU,EAAE;MAAO,CAAE;MAAAzB,QAAA,EAAC;IAEjF;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV;AAAClD,EAAA,CAlFQF,OAAO;AAAA+D,EAAA,GAAP/D,OAAO;AAoFhB,eAAeA,OAAO;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}